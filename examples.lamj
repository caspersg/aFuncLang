"string"
123
x=
  :
    1
x
xyz= :2
id=
  param:param
id "value"
one=
  "too":33
too=
  :"too"
one (too null)
intMap=
  1:2
  3:4
  x:10
intMap 123
string=
  :"this is a string!"
stringMap=
  "key":4
stringMap "key"
y=  
  "z":6
  "v": x:x
  "w": "arg":8
y "z"
y "w"
p=
  :9
p
add 2
subtract 1
subtract 2 1

rec=
  1: 1
  x: rec (subtract x 1)
fib=
  0:0
  1:1
  n: add (fib (subtract n 1)) (fib (subtract n 2))
subtract 2 1
w= :4
x= w: 3
z= x: w: 2
y= z: x: w: 1
y "z" "x" "w"
y z x w
y
(y)
("x")
(y "z")
(y "z") "x"
((y "z") "x")
(((y "z") "x") "w")
((y z) x) w

# a comment
cons 1 _
cons 1 (cons 2 _)
head (cons 1 _)

addTwo=
  n: add n 2

map addTwo (cons 1 (cons 2 _))

# null/nothing
_

complexMatch=
  { x: subtract x 2 }: 0
  x: x

# multiple argument with pattern matching
multiExpr=
  x:
    t= :add t 1
    p= :subtract p 3
    compose t p x


multi=
  0:
    1: "a"
    n: "b"
  x: 
    y: "c"
